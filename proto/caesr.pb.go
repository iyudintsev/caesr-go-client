// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.0
// source: caesr.proto

package caesr_go_client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CaesrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioChunk    []float32              `protobuf:"fixed32,1,rep,packed,name=audio_chunk,json=audioChunk,proto3" json:"audio_chunk,omitempty"`
	SampleRate    int32                  `protobuf:"varint,2,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaesrRequest) Reset() {
	*x = CaesrRequest{}
	mi := &file_caesr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaesrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaesrRequest) ProtoMessage() {}

func (x *CaesrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caesr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaesrRequest.ProtoReflect.Descriptor instead.
func (*CaesrRequest) Descriptor() ([]byte, []int) {
	return file_caesr_proto_rawDescGZIP(), []int{0}
}

func (x *CaesrRequest) GetAudioChunk() []float32 {
	if x != nil {
		return x.AudioChunk
	}
	return nil
}

func (x *CaesrRequest) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

type CaesrResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transcript    string                 `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaesrResponse) Reset() {
	*x = CaesrResponse{}
	mi := &file_caesr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaesrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaesrResponse) ProtoMessage() {}

func (x *CaesrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_caesr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaesrResponse.ProtoReflect.Descriptor instead.
func (*CaesrResponse) Descriptor() ([]byte, []int) {
	return file_caesr_proto_rawDescGZIP(), []int{1}
}

func (x *CaesrResponse) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

var File_caesr_proto protoreflect.FileDescriptor

const file_caesr_proto_rawDesc = "" +
	"\n" +
	"\vcaesr.proto\x12\x05caesr\"P\n" +
	"\fCaesrRequest\x12\x1f\n" +
	"\vaudio_chunk\x18\x01 \x03(\x02R\n" +
	"audioChunk\x12\x1f\n" +
	"\vsample_rate\x18\x02 \x01(\x05R\n" +
	"sampleRate\"/\n" +
	"\rCaesrResponse\x12\x1e\n" +
	"\n" +
	"transcript\x18\x01 \x01(\tR\n" +
	"transcript2J\n" +
	"\fCaesrService\x12:\n" +
	"\tRecognize\x12\x13.caesr.CaesrRequest\x1a\x14.caesr.CaesrResponse(\x010\x01B'Z%github.com/iyudintsev/caesr-go-clientb\x06proto3"

var (
	file_caesr_proto_rawDescOnce sync.Once
	file_caesr_proto_rawDescData []byte
)

func file_caesr_proto_rawDescGZIP() []byte {
	file_caesr_proto_rawDescOnce.Do(func() {
		file_caesr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_caesr_proto_rawDesc), len(file_caesr_proto_rawDesc)))
	})
	return file_caesr_proto_rawDescData
}

var file_caesr_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_caesr_proto_goTypes = []any{
	(*CaesrRequest)(nil),  // 0: caesr.CaesrRequest
	(*CaesrResponse)(nil), // 1: caesr.CaesrResponse
}
var file_caesr_proto_depIdxs = []int32{
	0, // 0: caesr.CaesrService.Recognize:input_type -> caesr.CaesrRequest
	1, // 1: caesr.CaesrService.Recognize:output_type -> caesr.CaesrResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_caesr_proto_init() }
func file_caesr_proto_init() {
	if File_caesr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_caesr_proto_rawDesc), len(file_caesr_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_caesr_proto_goTypes,
		DependencyIndexes: file_caesr_proto_depIdxs,
		MessageInfos:      file_caesr_proto_msgTypes,
	}.Build()
	File_caesr_proto = out.File
	file_caesr_proto_goTypes = nil
	file_caesr_proto_depIdxs = nil
}
